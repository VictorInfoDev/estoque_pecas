package estoque_pecas.peca;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import net.proteanit.sql.DbUtils;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import estoque_pecas.comandos.ClasseConexao;
import estoque_pecas.filtros.caixaAlta;

public class consultaBaixa extends javax.swing.JFrame {

public void Selecionando()
	{
            //buscar dados usuários para tabela 
            Connection conexao = null;
            Statement  comando = null;
            ResultSet  resultado = null;
            int quantTable = 0;
            try {
                    conexao = ClasseConexao.Conectar();
                    comando = conexao.createStatement();
                    String meu_sql = "SELECT nome_user_baixa AS 'Usuário', cod_peca_baixa AS 'Código', quant_peca_baixa AS 'Quantidade', motivo_baixa AS 'Motivo' FROM baixa";
                    resultado = comando.executeQuery(meu_sql); 
                    tableBaixas.setModel(DbUtils.resultSetToTableModel(resultado));
                    quantTable = tableBaixas.getRowCount();
                    if(quantTable == 0){
                        this.dispose();
                        JOptionPane.showMessageDialog(null,"Nenhuma baixa em andamento!");
                    }

            }
            catch (SQLException e)
            {
                    e.printStackTrace();
            }
            finally
            {
                ClasseConexao.FecharConexao(conexao);
                try
                {
                        comando.close();
                        resultado.close();
                }
                catch (SQLException e)
                {
                        e.printStackTrace();
                }
            }		
    }
    public consultaBaixa() {
        initComponents();
        codBaixa.setDocument(new caixaAlta());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBaixas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        codBaixa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Baixas");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tableBaixas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBaixas.setEnabled(false);
        jScrollPane1.setViewportView(tableBaixas);

        jLabel1.setText("Digite o número da peça:");

        jButton1.setText("Confirmar baixa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Recusar baixa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codBaixa)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codBaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Selecionando();
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Connection conexao = null;
        PreparedStatement comandoIn = null;
        try{conexao = ClasseConexao.Conectar();
            //LINHA DE INSERT, DELETE E UPDATE SQL
            String sqlIn = "DELETE FROM baixa WHERE cod_peca_baixa =?";
            comandoIn = conexao.prepareStatement(sqlIn,Statement.RETURN_GENERATED_KEYS);

            //VALORES PARA OS CAMPOS DA LINHA SQL  
            comandoIn.setString(1, codBaixa.getText());

            if(comandoIn.executeUpdate()>0)
            {
                //EXECUTA CASO A OPERACAO SEJA REALIZADA COM SUCESSO 
                JOptionPane.showMessageDialog(null, "Baixa recusada com sucesso!");
                codBaixa.setText("");
                Selecionando();

            }}catch(SQLException erro)
        {erro.printStackTrace();}
        finally{ClasseConexao.FecharConexao(conexao);
            try{comandoIn.close();}
            catch(SQLException erro){erro.printStackTrace();}}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int qtdBaixa = 0;
        int qtdEstoque = 0;
        int qtdNovo = 0;
        Connection conexao = null;        
        Statement comandoSelect = null;
        ResultSet resultado = null;
        ResultSet resultado2 = null;
        try
        {
            conexao = ClasseConexao.Conectar();
            comandoSelect = conexao.createStatement();
            //LINHA DE BUSCA SQL
            String sqlSelect = "SELECT quant_peca_baixa FROM baixa WHERE cod_peca_baixa = '" + codBaixa.getText() + "'";
            resultado = comandoSelect.executeQuery(sqlSelect);
            //RESULTADO DA BUSCA
            while(resultado.next())
            {
                qtdBaixa = Integer.parseInt(resultado.getString("quant_peca_baixa"));
            }

        }catch(SQLException erro){erro.printStackTrace();}
        finally{ClasseConexao.FecharConexao(conexao);
            try{comandoSelect.close();}
            catch(SQLException erro){erro.printStackTrace();}}
        try
        {
            conexao = ClasseConexao.Conectar();
            comandoSelect = conexao.createStatement();
            //LINHA DE BUSCA SQL
            String sqlSelect2 = "SELECT quant_peca FROM pecas WHERE cod_peca = '" + codBaixa.getText() + "'";
            resultado2 = comandoSelect.executeQuery(sqlSelect2);
            //RESULTADO DA BUSCA
            while(resultado2.next())
            {
                qtdEstoque = resultado2.getInt("quant_peca");
            }

        }catch(SQLException erro){erro.printStackTrace();}
        finally{ClasseConexao.FecharConexao(conexao);
            try{comandoSelect.close();}
            catch(SQLException erro){erro.printStackTrace();}}
        qtdNovo = qtdEstoque - qtdBaixa;
        PreparedStatement comandoIn = null;
        try{conexao = ClasseConexao.Conectar();
            //LINHA DE INSERT, DELETE E UPDATE SQL
            String sqlIn = "UPDATE pecas SET quant_peca=? WHERE cod_peca=?";
            comandoIn = conexao.prepareStatement(sqlIn,Statement.RETURN_GENERATED_KEYS);

            //VALORES PARA OS CAMPOS DA LINHA SQL  
            comandoIn.setInt(1, qtdNovo);
            comandoIn.setString(2, codBaixa.getText());

            if(comandoIn.executeUpdate()>0)
            {
                //EXECUTA CASO A OPERACAO SEJA REALIZADA COM SUCESSO 
                this.dispose();
                JOptionPane.showMessageDialog(null, "Baixa realizada com sucesso!");

            }}catch(SQLException erro)
        {erro.printStackTrace();}
        finally{ClasseConexao.FecharConexao(conexao);
            try{comandoIn.close();}
            catch(SQLException erro){erro.printStackTrace();}}
        
        PreparedStatement comandoInE = null;
        try{
            conexao = ClasseConexao.Conectar();
            //LINHA DE INSERT, DELETE E UPDATE SQL
            String sqlInE = "DELETE FROM baixa WHERE cod_peca_baixa=?";
            comandoInE = conexao.prepareStatement(sqlInE,Statement.RETURN_GENERATED_KEYS);

            //VALORES PARA OS CAMPOS DA LINHA SQL  
            comandoInE.setString(1, codBaixa.getText());

            if(comandoInE.executeUpdate()>0)
            {
                //EXECUTA CASO A OPERACAO SEJA REALIZADA COM SUCESSO 

            }}catch(SQLException erro)
        {erro.printStackTrace();}
        finally{ClasseConexao.FecharConexao(conexao);
            try{comandoInE.close();}
            catch(SQLException erro){erro.printStackTrace();}}
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultaBaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultaBaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultaBaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultaBaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultaBaixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codBaixa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBaixas;
    // End of variables declaration//GEN-END:variables
}
